{
  "formatVersion": 1,
  "database": {
    "version": 12,
    "identityHash": "192aa204f5eb09ea61a5f67980bd241b",
    "entities": [
      {
        "tableName": "question",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`answerCount` INTEGER NOT NULL, `body` TEXT, `bodyMarkdown` TEXT, `closedDate` INTEGER, `closedReason` TEXT, `commentCount` INTEGER, `creationDate` INTEGER NOT NULL, `downVoteCount` INTEGER NOT NULL, `downvoted` INTEGER NOT NULL, `favoriteCount` INTEGER NOT NULL, `favorited` INTEGER NOT NULL, `isAnswered` INTEGER NOT NULL, `lastActivityDate` INTEGER, `lastEditDate` INTEGER, `lastEditor` INTEGER, `owner` INTEGER NOT NULL, `questionId` INTEGER NOT NULL, `score` INTEGER NOT NULL, `shareLink` TEXT NOT NULL, `tags` TEXT, `title` TEXT NOT NULL, `upVoteCount` INTEGER NOT NULL, `upvoted` INTEGER NOT NULL, `viewCount` INTEGER NOT NULL, PRIMARY KEY(`questionId`), FOREIGN KEY(`owner`) REFERENCES `user`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`lastEditor`) REFERENCES `user`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "answerCount",
            "columnName": "answerCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "body",
            "columnName": "body",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "bodyMarkdown",
            "columnName": "bodyMarkdown",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "closedDate",
            "columnName": "closedDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "closedReason",
            "columnName": "closedReason",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "commentCount",
            "columnName": "commentCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "creationDate",
            "columnName": "creationDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "downVoteCount",
            "columnName": "downVoteCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "downvoted",
            "columnName": "downvoted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "favoriteCount",
            "columnName": "favoriteCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "favorited",
            "columnName": "favorited",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isAnswered",
            "columnName": "isAnswered",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastActivityDate",
            "columnName": "lastActivityDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastEditDate",
            "columnName": "lastEditDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastEditor",
            "columnName": "lastEditor",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "owner",
            "columnName": "owner",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "questionId",
            "columnName": "questionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "score",
            "columnName": "score",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "shareLink",
            "columnName": "shareLink",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tags",
            "columnName": "tags",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "upVoteCount",
            "columnName": "upVoteCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "upvoted",
            "columnName": "upvoted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "viewCount",
            "columnName": "viewCount",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "questionId"
          ]
        },
        "indices": [
          {
            "name": "index_question_owner",
            "unique": false,
            "columnNames": [
              "owner"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_question_owner` ON `${TABLE_NAME}` (`owner`)"
          },
          {
            "name": "index_question_lastEditor",
            "unique": false,
            "columnNames": [
              "lastEditor"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_question_lastEditor` ON `${TABLE_NAME}` (`lastEditor`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "user",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "owner"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "user",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "lastEditor"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "answer",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`answerId` INTEGER NOT NULL, `isAccepted` INTEGER NOT NULL, `downVoteCount` INTEGER NOT NULL, `upVoteCount` INTEGER NOT NULL, `score` INTEGER NOT NULL, `creationDate` INTEGER NOT NULL, `bodyMarkdown` TEXT NOT NULL, `questionId` INTEGER NOT NULL, `owner` INTEGER NOT NULL, `lastEditDate` INTEGER, `lastEditor` INTEGER, `commentCount` INTEGER, `shareLink` TEXT NOT NULL, PRIMARY KEY(`answerId`), FOREIGN KEY(`owner`) REFERENCES `user`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`lastEditor`) REFERENCES `user`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "answerId",
            "columnName": "answerId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isAccepted",
            "columnName": "isAccepted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "downVoteCount",
            "columnName": "downVoteCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "upVoteCount",
            "columnName": "upVoteCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "score",
            "columnName": "score",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "creationDate",
            "columnName": "creationDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "bodyMarkdown",
            "columnName": "bodyMarkdown",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "questionId",
            "columnName": "questionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "owner",
            "columnName": "owner",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastEditDate",
            "columnName": "lastEditDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastEditor",
            "columnName": "lastEditor",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "commentCount",
            "columnName": "commentCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "shareLink",
            "columnName": "shareLink",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "answerId"
          ]
        },
        "indices": [
          {
            "name": "index_answer_owner",
            "unique": false,
            "columnNames": [
              "owner"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_answer_owner` ON `${TABLE_NAME}` (`owner`)"
          },
          {
            "name": "index_answer_lastEditor",
            "unique": false,
            "columnNames": [
              "lastEditor"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_answer_lastEditor` ON `${TABLE_NAME}` (`lastEditor`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "user",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "owner"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "user",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "lastEditor"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "user",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`aboutMe` TEXT, `acceptRate` INTEGER, `accountId` INTEGER, `displayName` TEXT NOT NULL, `link` TEXT, `location` TEXT, `profileImage` TEXT, `reputation` INTEGER NOT NULL, `userId` INTEGER NOT NULL, `userType` TEXT NOT NULL, `bronzeBadgeCount` INTEGER NOT NULL, `silverBadgeCount` INTEGER NOT NULL, `goldBadgeCount` INTEGER NOT NULL, PRIMARY KEY(`userId`))",
        "fields": [
          {
            "fieldPath": "aboutMe",
            "columnName": "aboutMe",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "acceptRate",
            "columnName": "acceptRate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "accountId",
            "columnName": "accountId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "link",
            "columnName": "link",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "location",
            "columnName": "location",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "profileImage",
            "columnName": "profileImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reputation",
            "columnName": "reputation",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userType",
            "columnName": "userType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "bronzeBadgeCount",
            "columnName": "bronzeBadgeCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "silverBadgeCount",
            "columnName": "silverBadgeCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "goldBadgeCount",
            "columnName": "goldBadgeCount",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "answer_drafts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`question_id` INTEGER NOT NULL, `questionTitle` TEXT NOT NULL, `updated_date` INTEGER NOT NULL, `body_markdown` TEXT NOT NULL, `site` TEXT NOT NULL, PRIMARY KEY(`question_id`))",
        "fields": [
          {
            "fieldPath": "questionId",
            "columnName": "question_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "questionTitle",
            "columnName": "questionTitle",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "updatedDate",
            "columnName": "updated_date",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "bodyMarkdown",
            "columnName": "body_markdown",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "site",
            "columnName": "site",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "question_id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "search",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`query` TEXT NOT NULL, `isAccepted` INTEGER, `minNumAnswers` INTEGER, `bodyContains` TEXT, `isClosed` INTEGER, `tags` TEXT, `titleContains` TEXT, `site` TEXT NOT NULL, `queryKey` INTEGER NOT NULL, `timestamp` INTEGER NOT NULL, PRIMARY KEY(`queryKey`))",
        "fields": [
          {
            "fieldPath": "query",
            "columnName": "query",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isAccepted",
            "columnName": "isAccepted",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "minNumAnswers",
            "columnName": "minNumAnswers",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "bodyContains",
            "columnName": "bodyContains",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isClosed",
            "columnName": "isClosed",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "tags",
            "columnName": "tags",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "titleContains",
            "columnName": "titleContains",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "site",
            "columnName": "site",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "queryKey",
            "columnName": "queryKey",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "queryKey"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "site",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`name` TEXT NOT NULL, `parameter` TEXT NOT NULL, `url` TEXT NOT NULL, `audience` TEXT NOT NULL, `iconUrl` TEXT NOT NULL, `isUserRegistered` INTEGER NOT NULL, PRIMARY KEY(`parameter`))",
        "fields": [
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "parameter",
            "columnName": "parameter",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "audience",
            "columnName": "audience",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "iconUrl",
            "columnName": "iconUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isUserRegistered",
            "columnName": "isUserRegistered",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "parameter"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "question_drafts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`title` TEXT NOT NULL, `updated_date` INTEGER NOT NULL, `body` TEXT NOT NULL, `expand_body` TEXT NOT NULL, `tags` TEXT NOT NULL, `site` TEXT NOT NULL, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL)",
        "fields": [
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "updatedDate",
            "columnName": "updated_date",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "body",
            "columnName": "body",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "expandBody",
            "columnName": "expand_body",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tags",
            "columnName": "tags",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "site",
            "columnName": "site",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '192aa204f5eb09ea61a5f67980bd241b')"
    ]
  }
}